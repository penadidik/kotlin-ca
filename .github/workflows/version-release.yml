name: Auto Versioning & GitHub Release

on:
  push:
    tags:
       - 'release/*'  # Triggers on tags like release/v1.0.0, v2.1.3, etc.

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Define version variables
        id: vars
        run: |
          VERSION_MAJOR=1
          DATE_TAG=$(date +'%Y.%m.%d-%H%M')
          FULL_TAG=${GITHUB_REF#refs/tags/release/}         # v1-2025.06.30-1030-development
          TYPE_TAG=${FULL_TAG##*-}
          TAG="v${VERSION_MAJOR}-${DATE_TAG}-${TYPE_TAG}"

          echo "Generated tag: $FULL_TAG"
          echo "tag_name=$FULL_TAG" >> "$GITHUB_OUTPUT"

      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Get last tag and merged PRs
        id: changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "Last tag: $LAST_TAG"

          if [ -z "$LAST_TAG" ]; then
            PR_LIST=$(gh pr list --state merged --limit 100 --json title,number --jq '.[] | "- PR #" + (.number|tostring) + ": " + .title')
          else
            LAST_TAG_DATE=$(git log -1 --format=%aI $LAST_TAG)
            PR_LIST=$(gh pr list --state merged --limit 100 --json title,number,mergedAt --jq \
              '.[] | select(.mergedAt > "'$LAST_TAG_DATE'") | "- PR #" + (.number|tostring) + ": " + .title')
          fi

          echo "release_notes<<EOF" >> $GITHUB_ENV
          echo "$PR_LIST" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          TAG=${{ steps.vars.outputs.tag_name }}
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping."
            exit 0
          fi
          git tag -a "$TAG" -m "Auto tag: $TAG"
          git push origin "$TAG"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          body: ${{ env.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}